apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: replicated
  labels:
    app: replicated
    tier: master
spec:
  template:
    metadata:
      labels:
        app: replicated
        tier: master
    spec:
      containers:
      - name: replicated
        image: "{{ replicated_docker_host }}/replicated/replicated:{{ replicated_tag }}{{ environment_tag_suffix }}"
        imagePullPolicy: Always
        env:
        - name: SCHEDULER_ENGINE
          value: kubernetes
        - name: RELEASE_CHANNEL
          value: "{{ channel_name }}"{% if release_sequence %}
        - name: RELEASE_SEQUENCE
          value: "{{ release_sequence }}"
{%- endif %}{% if replicated_env == "staging" %}
        - name: MARKET_BASE_URL
          value: https://api.staging.replicated.com/market
        - name: DATA_BASE_URL
          value: https://data.staging.replicated.com/market
        - name: VENDOR_REGISTRY
          value: registry.staging.replicated.com
        - name: INSTALLER_URL
          value: https://get.staging.replicated.com
        - name: REPLICATED_IMAGE_TAG_SUFFIX
          value: .staging
{%- endif %}
        - name: LOCAL_ADDRESS # TODO: deprecate this
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace{% if storageclass != None %}
        - name: K8S_STORAGECLASS
          value: "{{ storageclass }}"
{%- endif %}
        - name: LOG_LEVEL
          value: "{{ log_level|default('info', true) }}"{% if custom_selinux_replicated_domain %}
        - name: SELINUX_REPLICATED_DOMAIN
          value: "{{ selinux_replicated_domain }}"
{%- endif %}
        ports:
        - containerPort: 9874
        - containerPort: 9877
        - containerPort: 9878
        securityContext:
          seLinuxOptions:
            type: "{{ selinux_replicated_domain }}"
        volumeMounts:
        - name: replicated-persistent
          mountPath: /var/lib/replicated
        - name: replicated-socket
          mountPath: /var/run/replicated
        - name: docker-socket
          mountPath: /host/var/run/docker.sock
        - name: proc
          mountPath: /host/proc
          readOnly: true
      - name: replicated-ui
        image: "{{ replicated_docker_host }}/replicated/replicated-ui:{{ replicated_ui_tag }}{{ environment_tag_suffix }}"
        imagePullPolicy: Always
        env:
        - name: RELEASE_CHANNEL
          value: "{{ channel_name }}"
        - name: LOG_LEVEL
          value: "{{ log_level|default('info', true) }}"
        ports:
        - containerPort: 8800
        securityContext:
          seLinuxOptions:
            type: "{{ selinux_replicated_domain }}"
        volumeMounts:
        - name: replicated-socket
          mountPath: /var/run/replicated
      volumes:
      - name: replicated-persistent
        persistentVolumeClaim:
          claimName: replicated-pv-claim
      - name: replicated-socket
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: proc
        hostPath:
          path: /proc
